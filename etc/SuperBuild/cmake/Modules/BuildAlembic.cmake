include(ExternalProject)

set(Alembic_BUILD_STATIC OFF)
set(Alembic_CXX_FLAGS ${CMAKE_CXX_FLAGS})
set(Alembic_C_FLAGS ${CMAKE_C_FLAGS})
if(BUILD_SHARED_LIBS)
    set(Alembic_CXX_FLAGS "${Alembic_CXX_FLAGS} -DH5_BUILT_AS_DYNAMIC_LIB=ON")
    set(Alembic_C_FLAGS "${Alembic_C_FLAGS} -DH5_BUILT_AS_DYNAMIC_LIB=ON")
else()
    set(Alembic_BUILD_STATIC ON)
endif()

set(Alembic_ARGS
    -DCMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}
    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_PREFIX}/lib
    -DCMAKE_PREFIX_PATH=${CMAKE_INSTALL_PREFIX}
    -DCMAKE_POLICY_DEFAULT_CMP0091:STRING=NEW
    -DCMAKE_FIND_FRAMEWORK=${CMAKE_FIND_FRAMEWORK}
    -DCMAKE_CXX_FLAGS=${Alembic_CXX_FLAGS}
    -DCMAKE_C_FLAGS=${Alembic_C_FLAGS}
    -DCMAKE_MSVC_RUNTIME_LIBRARY=${CMAKE_MSVC_RUNTIME_LIBRARY}
    -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}
    -DUSE_BINARIES=OFF
    -DUSE_HDF5=ON
    -DUSE_STATIC_HDF5=${Alembic_BUILD_STATIC}
    -DH5_BUILT_AS_DYNAMIC_LIB=${Alembic_H5_BUILT_AS_DYNAMIC_LIB}
    -DUSE_STATIC_BOOST=${Alembic_BUILD_STATIC}
    -DUSE_TESTS=OFF
    -DALEMBIC_ILMBASE_LINK_STATIC=${Alembic_BUILD_STATIC}
    -DALEMBIC_SHARED_LIBS=${BUILD_SHARED_LIBS})
if(CMAKE_CXX_STANDARD)
    set(Alembic_ARGS ${Alembic_ARGS} -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD})
endif()

ExternalProject_Add(
    Alembic
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/Alembic
    DEPENDS HDF5 Boost IlmBase
    GIT_REPOSITORY "https://github.com/alembic/alembic.git"
    GIT_TAG 1.7.16
    PATCH_COMMAND
        ${CMAKE_COMMAND} -E tar xf
        ${CMAKE_SOURCE_DIR}/Alembic-patch.tar.gz
    CMAKE_ARGS ${Alembic_ARGS})
