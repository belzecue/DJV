# Find the embree library.
#
# This module defines the following variables:
#
# * EMBREE_INCLUDE_DIRS
# * EMBREE_LIBRARIES
#
# This module defines the following imported targets:
#
# * embree::embree
#
# This module defines the following interfaces:
#
# * embree

find_package(Threads REQUIRED)
find_package(ISPC REQUIRED)
find_package(TBB REQUIRED)

find_path(EMBREE_INCLUDE_DIR NAMES embree3/rtcore.h)
set(EMBREE_INCLUDE_DIRS
    ${EMBREE_INCLUDE_DIR}
    ${TBB_INCLUDE_DIRS})

find_library(EMBREE_LIBRARY NAMES embree3)
find_library(EMBREE_AVX_LIBRARY NAMES embree_avx)
find_library(EMBREE_AVX2_LIBRARY NAMES embree_avx2)
find_library(EMBREE_AVX512SKX_LIBRARY NAMES embree_avx512skx)
find_library(EMBREE_SSE42_LIBRARY NAMES embree_sse42)
find_library(EMBREE_TASKING_LIBRARY NAMES tasking)
find_library(EMBREE_LEXERS_LIBRARY NAMES lexers)
find_library(EMBREE_SIMD_LIBRARY NAMES simd)
find_library(EMBREE_NATH_LIBRARY NAMES math)
find_library(EMBREE_SYS_LIBRARY NAMES sys)
set(EMBREE_LIBRARIES ${EMBREE_LIBRARY})
if(EMBREE_AVX_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_AVX_LIBRARY})
endif()
if(EMBREE_AVX2_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_AVX2_LIBRARY})
endif()
if(EMBREE_AVX512SKX_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_AVX512SKX_LIBRARY})
endif()
if(EMBREE_SSE42_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_SSE42_LIBRARY})
endif()
if(EMBREE_SYS_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_SYS_LIBRARY})
endif()
if(EMBREE_MATH_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_MATH_LIBRARY})
endif()
if(EMBREE_SIMD_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_SIMD_LIBRARY})
endif()
if(EMBREE_LEXERS_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_LEXERS_LIBRARY})
endif()
if(EMBREE_TASKING_LIBRARY)
    list(APPEND EMBREE_LIBRARIES ${EMBREE_TASKING_LIBRARY})
endif()
set(EMBREE_LIBRARIES
    ${EMBREE_LIBRARIES}
    ${TBB_LIBRARIES}
    ${CMAKE_THREAD_LIBS_INIT})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(
    embree
    REQUIRED_VARS
        EMBREE_INCLUDE_DIR
        EMBREE_LIBRARY)
mark_as_advanced(
    EMBREE_INCLUDE_DIR
    EMBREE_LIBRARY
    EMBREE_TASKING_LIBRARY
    EMBREE_LEXERS_LIBRARY
    EMBREE_SIMD_LIBRARY
    EMBREE_MATH_LIBRARY
    EMBREE_SYS_LIBRARY
    EMBREE_AVX_LIBRARY
    EMBREE_AVX2_LIBRARY
    EMBREE_AVX512SKX_LIBRARY
    EMBREE_SSE42_LIBRARY)

if(embree_FOUND AND NOT TARGET embree::embree)
    add_library(embree::embree UNKNOWN IMPORTED)
    set(EMBREE_LINK_LIBRARIES)
    if(EMBREE_AVX_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_AVX_LIBRARY})
    endif()
    if(EMBREE_AVX2_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_AVX2_LIBRARY})
    endif()
    if(EMBREE_AVX512SKX_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_AVX512SKX_LIBRARY})
    endif()
    if(EMBREE_SSE42_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_SSE42_LIBRARY})
    endif()
    if(EMBREE_SYS_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_SYS_LIBRARY})
    endif()
    if(EMBREE_MATH_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_MATH_LIBRARY})
    endif()
    if(EMBREE_SIMD_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_SIMD_LIBRARY})
    endif()
    if(EMBREE_LEXERS_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_LEXERS_LIBRARY})
    endif()
    if(EMBREE_TASKING_LIBRARY)
        list(APPEND EMBREE_LINK_LIBRARIES ${EMBREE_TASKING_LIBRARY})
    endif()
    set(EMBREE_LINK_LIBRARIES
        ${EMBREE_LINK_LIBRARIES}
        TBB
        ${CMAKE_THREAD_LIBS_INIT})
    set_target_properties(embree::embree PROPERTIES
        IMPORTED_LOCATION "${EMBREE_LIBRARY}"
        IMPORTED_CONFIGURATIONS "${CMAKE_BUILD_TYPE}"
        IMPORTED_LOCATION_${CMAKE_BUILD_TYPE} "${EMBREE_LIBRARY}"
        INTERFACE_COMPILE_DEFINITIONS "embree_FOUND"
        INTERFACE_INCLUDE_DIRECTORIES "${EMBREE_INCLUDE_DIR}"
        INTERFACE_LINK_LIBRARIES "${EMBREE_LINK_LIBRARIES}")
endif()
if(embree_FOUND AND NOT TARGET embree)
    add_library(embree INTERFACE)
    target_link_libraries(embree INTERFACE embree::embree)
endif()
